name: "CodeQL Scan"

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]
    types: [opened, synchronize, reopened, ready_for_review]

permissions:
  actions: read
  contents: read
  security-events: write

jobs:
  codeql:
    name: Analyze (CodeQL)
    runs-on: ubuntu-latest

    steps:
      # 1️⃣ Descarga del código fuente
      - name: 🧰 Checkout del código
        uses: actions/checkout@v5

      # 2️⃣ Inicialización de CodeQL (JavaScript/TypeScript)
      - name: 🧪 Inicializar CodeQL
        uses: github/codeql-action/init@v3
        with:
          languages: javascript
          queries: security-and-quality

      # 3️⃣ Instalación de dependencias npm (para TypeScript/Angular)
      - name: 📦 Instalar dependencias
        run: npm ci

      # 4️⃣ (Opcional) Compilar el proyecto Angular si deseas analizar el código transpilado también
      - name: 🏗️ Compilar Angular
        run: npm run build --if-present

      # 5️⃣ Ejecutar el análisis de CodeQL
      - name: 🔍 Ejecutar análisis de CodeQL
        uses: github/codeql-action/analyze@v3

      # 6️⃣ Diagnóstico (opcional): listar archivos SARIF
      - name: 🔎 Buscar archivos SARIF generados
        if: always()
        run: |
          echo "Buscando archivos .sarif generados..."
          find /home/runner/work -type f -name "*.sarif" -print || echo "No se encontró ningún archivo .sarif"

      # 7️⃣ Subir el reporte SARIF como artifact
      - name: 📦 Subir reporte SARIF
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: codeql-sarif
          path: /home/runner/work/**/*.sarif
